name: Python autotests

# on: [push]
on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        type: choice
        default: second_test
        options:
          - first_test
          - second_test
#          - smoke
#          - regression
#          - extended
#          - all

jobs: 
  # Первая джоба
  run-tests:
    runs-on: ubuntu-latest
    name: Run autotests # Название джобы
    steps: # Шаги начинаются с тире
      - name: Checkout autotests # Название шага
        uses: actions/checkout@v5 # Вводим actions/checkout@v5 в гугле и смотрим на github актуальную версию
      - name: Set up Python environment
        uses: actions/setup-python@v6 # Вводим actions/setup-python@v2 в гугле и смотрим на github актуальную версию
        with:
          python-version: '3.13'
      - name: Install Chrome
        run: sudo apt-get install google-chrome-stable
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: first_test
        run: pytest --alluredir=allure-results
      - name: second_test
        run: pytest --alluredir=allure-results
      # Формирование отчета, которую будем в дальнейшем подтягивать
      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 1
        
  # Вторая джоба
  generate_report: 
    runs-on: ubuntu-latest
    needs: run-tests # Для запуска этой джобы нужно, чтобы прошла сначала предыдущая
    name: Generate report
    steps: 
      - uses: actions/setup-java@v5
        with:
          distribution: 'microsoft' # See 'Supported distributions' for available options
          java-version: '21'
      - run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.35.1/allure-2.35.1.tgz && sudo tar -zxvf allure-2.35.1.tgz -C /opt/ && sudo ln -s /opt/allure-2.35.1/bin/allure /usr/bin/allure
      # Сначала происходит скачивание && разархивация, складываем в папочку && делаем его доступным всей системе
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v5
      - run: allure generate -c allure-results -o _site
      # Сохраняем сгенерированный репорт с содержимым _site
      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path:
            _site
          retention-days: 1

  publichs-report:
    runs-on: ubuntu-latest
    needs: generate_report # Для запуска этой джобы нужно, чтобы прошла сначала предыдущая
    name: Publication report
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v5
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3 # НО ЭТО НЕ ТОЧНО, ВОЗМОЖНО ВЕРСИЯ 3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
